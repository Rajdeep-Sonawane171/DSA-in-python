
1. Find 2 elements with given sum

class Solution:
    def twoSum(self,nums:list[int],target:int) :
        prevMap={}
        for i,n in enumerate(nums):
            diff=target-n
            if diff in prevMap:
                return [prevMap[diff],i]
            prevMap[n]=i
        return

2. Majority Element

class Solution:
    def majorityElement(self, nums: List[int]) -> int:
        cnt=0
        cnt1=0
        el=None
        for i in range(len(nums)):
            if(cnt==0):
                cnt=1
                el=nums[i]
            elif(el==nums[i]):
                cnt+=1
            else:
                cnt-=1

        for i in range(len(nums)):

            if(nums[i]==el):
                cnt1+=1                      
        if cnt1>(len(nums)//2):
            return el

3. Find the number occuring odd number of times

def getOddOccurrence(arr, arr_size):
     
    for i in range(0,arr_size):
        count = 0
        for j in range(0, arr_size):
            if arr[i] == arr[j]:
                count+=1
             
        if (count % 2 != 0):
            return arr[i]
         
    return -1
     
        
