
1. Find 2 elements with given sum

class Solution:
    def twoSum(self,nums:list[int],target:int) :
        prevMap={}
        for i,n in enumerate(nums):
            diff=target-n
            if diff in prevMap:
                return [prevMap[diff],i]
            prevMap[n]=i
        return

2. Majority Element

class Solution:
    def majorityElement(self, nums: List[int]) -> int:
        cnt=0
        cnt1=0
        el=None
        for i in range(len(nums)):
            if(cnt==0):
                cnt=1
                el=nums[i]
            elif(el==nums[i]):
                cnt+=1
            else:
                cnt-=1

        for i in range(len(nums)):

            if(nums[i]==el):
                cnt1+=1                      
        if cnt1>(len(nums)//2):
            return el

3. Find the number occuring odd number of times

def getOddOccurrence(arr, arr_size):
     
    for i in range(0,arr_size):
        count = 0
        for j in range(0, arr_size):
            if arr[i] == arr[j]:
                count+=1
             
        if (count % 2 != 0):
            return arr[i]
         
    return -1

4. Merge an array of size n into another of size m + n

class Solution:
    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:
        last=m+n-1
        while m>0 and n>0:
            if nums1[m-1]<nums2[n-1]:
                nums1[last]=nums2[n-1]
                n=n-1
                last=last-1
            else:
                nums1[last]=nums1[m-1]    
                last=last-1
                m=m-1

        while n>0:
            nums1[last]=nums2[n-1]
            last-=1
            n-=1        

5. Rotate an array

class Solution:
    def rotate(self, nums: List[int], k: int) -> None:
        k=k%len(nums)
        l,r=0,len(nums)-1
        while l<r:
            nums[l],nums[r]=nums[r],nums[l]
            l+=1
            r-=1
        l,r=0,k-1
        while l<r:
            nums[l],nums[r]=nums[r],nums[l]
            l+=1
            r-=1 
        l,r=k,len(nums)-1    
        while l<r:
            nums[l],nums[r]=nums[r],nums[l]
            l+=1
            r-=1
6. Leaders in an array

  class Solution:
    # @param A : list of integers
    # @return a list of integers
    def solve(self, A):
        maxx=A[len(A)-1]
        print(maxx,end=' ')
        for i in range(len(A)-2,-1,-1):
            if maxx < A[i]:
                maxx=A[i]
                print(A[i],end=' ') 
                

            
            

b=Solution()
print(b.solve(A))

7. Majority element in sorted array

class Solution:
    def majorityElement(self, nums: List[int]) -> int:
        cnt=0
        cnt1=0
        el=None
        for i in range(len(nums)):
            if(cnt==0):
                cnt=1
                el=nums[i]
            elif(el==nums[i]):
                cnt+=1
            else:
                cnt-=1

        for i in range(len(nums)):

            if(nums[i]==el):
                cnt1+=1                      
        if cnt1>(len(nums)//2):
            return True
        else:
             return False
   
        
